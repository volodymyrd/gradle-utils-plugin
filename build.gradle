plugins {
    id "com.google.protobuf" version "0.8.15"
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

defaultTasks 'clean', 'build'

def compatibilityVersion = 1.8
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion
group = 'com.volmyr'
version = '0.0.2'

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/volodymyrd/public-mvn-repo")
        credentials {
            username = project.findProperty("repo.user") ?: System.getenv("USERNAME")
            password = project.findProperty("mvn_repo_rw.key") ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    implementation 'com.volmyr:proto-utils:0.0.28-SNAPSHOT'

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'com.google.protobuf:protobuf-java:3.12.2'
}

gradlePlugin {
    plugins {
        protoToPojo {
            id = 'com.volmyr.gradle_plugins.utils.protoToPojo'
            implementationClass = 'com.volmyr.gradle_plugins.utils.ProtoToPojoGradlePlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    dependsOn(tasks.functionalTest)
}

protobuf {
    //generatedFilesBaseDir = "$projectDir/build/generated/sources"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle utils plugins',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle Utils plugins')
                root.appendNode('description', 'Gradle Utils plugins.')
                root.appendNode('url', 'https://github.com/volodymyrd/gradle-utils-plugin')
                root.appendNode('inceptionYear', '2021')

                def developers = root.appendNode('developers')
                def vdotsenko = developers.appendNode('developer')
                vdotsenko.appendNode('id', 'vdotsenko')
                vdotsenko.appendNode('name', 'Volodymyr Dotsenko')
                vdotsenko.appendNode('email', 'volodymyrdotsenko@gmail.com')
            }
        }
    }

    repositories {
        maven {
            name = "Gradle-Utils-Plugins"
            url = uri("https://maven.pkg.github.com/volodymyrd/gradle-utils-plugin")
            credentials {
                // ~/.gradle/gradle.properties
                username = project.findProperty("repo.user") ?: System.getenv("USERNAME")
                password = project.findProperty("mvn_repo_rw.key") ?: System.getenv("TOKEN")
            }
        }
    }
}
